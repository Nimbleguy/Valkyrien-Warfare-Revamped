// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}



*/

repositories {
		maven {
			name "Mobius Repo"
			url "http://mobiusstrip.eu/maven"
		}
		maven {
			name 'DVS1 Maven FS'
			url 'http://dvs1.progwml6.com/files/maven'
		}
		maven {
			name 'SpongeForge Repo'
			url 'https://mvnrepository.com/artifact/org.spongepowered/spongeforge'
		}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// define the properties file
ext.configFile = file "project.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
if (hasProperty('appendBuildNumber')) {
    version = version + "-" + appendBuildNumber.toString()
} else {
    version = version + "-0"
}

group = "${config.group_id}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${config.mod_id_cap}"

minecraft {
    version = "${config.forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160822"
    coreMod = "ValkyrienWarfareBase.CoreMod.ValkyrienWarfarePlugin"
    makeObfSourceJar = false // an Srg named sources jar isn't made by default. comment this to enable.
}

dependencies {
    // Basically just mods that are being bugtested with ValkyrienWarfare go here, they will get autocompiled and mixed into the project
	
    //deobfCompile "slimeknights.mantle:Mantle:${config.minecraft_version}-${config.mantle_version}:deobf"
	
    //compile "slimeknights:TConstruct:${config.minecraft_version_short}-${config.ticon_version}:deobf"

	//compile "org.spongepowered:spongeforge:1.10.2-2123-5.1.0-BETA-1893"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
		attributes 'FMLAT': 'ValkyrienWarfare_At.cfg'
		attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
	manifest {
		attributes 'FMLAT': 'ValkyrienWarfare_At.cfg'
		attributes 'FMLCorePlugin': 'ValkyrienWarfareBase.CoreMod.ValkyrienWarfarePlugin' 
		attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

tasks.build.dependsOn deobfJar, sourceJar

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            groupId config.mod_id_cap
            artifactId config.mod_id
            artifact jar
            artifact sourceJar
            artifact deobfJar
        }
    }
    repositories {
        mavenLocal()
    }
}
